language: node_js
node_js: 8
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm update --dev
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_a9b493f84ffb_key -iv $encrypted_a9b493f84ffb_iv
  -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: nJHW2vB7Z1zqe4uFDPe4fRavFynZlXsFwTKgUfUCOCy6zOuHjIXbgxW6GBm+mxsaiLVoNBHgEFmbnmEafSTFyMVlW2kcslACFPXCayoHx6cWjYMGfXFhXy7WmrlX6jWGLXgQFXmA3ScyHMNAJ5FytYd88UNVHTGYZBVHULkjDb9nu/fGeWtMvF6pF50oSDbHDHA1v6rhm6FJQCa4kPCq7hXmbSXznr0K2TH84lm5ZgyZMn5VC0cP8suBtkj2QE4vaB9xtIzGg02PLuFfIAb0e434RCPMeFRwkl8q81JL2Hq7TJ7fHIekkE6rVcdIeQqDc1LSWCxbAad3AoqFwyozNqTmiCHnXPI8YFdqiAyAbJs5YsBUzg1bb6NN7xL1TqHbi0mdB7+QIP3UCmXOh3+dKRN0Pw9YhVK3i6czFlj6MgZB8lOarX7QfMnImobej41yzuI5wRbwF91attCofK/JbLqC8GMEvVeZq/CA1QuM31XhCdcCopTlaBa/f4nc4v2W54ipvai/y/6GwLmC00EvKU7DTx4y7jRA/GxtVx2gehJsOc6/eadgLB/04Vilq50rv50vK2X+gQxfZPl8QZKgz7yNlB77/eIY76H+Lrn0rNEQC6UiVHGiy9zF2arlP3HVN5bmS9GxZWhmbqLHj4iamy4+Wahg5HMoD4JAv5NZSLE=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: UyG+Lu4QiN6d4ucIu/RhcDbCStmL+lS4cS1il0k72+LJmFdt/GKRfwSi/G4UoOO+Ya0pK1Xwfjq6GxP1kuJuxmsExb3F3DFpWpv1XzxlKDaYUKyao88BGjyNKZM3h8itpkvXPRDWKkd3bgPubO6LHTVkxspOH145QVCn25/jyP3DbPLvtbtGpHo0CWMxdv1++U34Geqd2loC/KITkJwo95nM0Q9wU/j4QuixGeSwwk9HCaZNugG+lIJLnp8eFQxuQkq1k6NqNsN1SVq/BbyshFpQH0aQbPHmKE3Rc4AQy6hznDUi6A/2joTEhaxBBz/0aOQbgw5D7Wc/q9/Y8u6o7RkHdNVn3xbLIqFlYbg8oqFVw/DNPsRLgvCM4CMM9/NzeCuPaFhRNaWo9PLheKRDop/ZDsnVbbHjWWxOsVrVSFyTzj2unKShBZ7W+XHa+9fJaFC6exhooUI7pzUOUTpYLnHTQL69vqbY6LdJcYG0OXnkY1gyI9ylI2/CuGiPQRJ3R9H/gmZEFRcLkNJLYzdbWb9ieMt/30Czya3fYka2UaGtcO9NF+Nht+jAhZv4DfyiCs25AjQ/1KQKuwN3Kk34DojXOheVYXPxONeHABbfdw8FQYmATo6F2fw7ZNuVFjxlwmuTBUXonULaHgE3YojxxOE0y7n64iOXMkKBuisp3xo=
  - secure: F4MmtlLqCwpDIjMcIgHErCZQfVnaDf9uDKIgza9v7qjZfPSWNqV4aUdPOmb6lvv7JJHDpZZFRJ0UD76t2GlwuQ8hi0q3P37jbjyF3eSx/joiQAZsBLICZPrGtkoEIZmKof8F+/wJeN2yiXrHURbQs1px4ocAUP1GCt3aCpWUUSxY8VOKXrS0WYl6l0L7VhfVf3k8YhkXHuFFXefpvJVhPaMoYBI9WukIwEDGdeeePOl38ang/kKBSwslISWMG2IInEAojzl9WcOcHQBbu+AGm0ZdNBAKQ8L8MgU8j6pDpHjf3rC304BCJoO1XbcSrI+7/pHb3cpeL/Y3A8XQBVAJ14kkbeGiSizBjPdvqqtZ8tXTA0B9A0rRya8JxWEM+N8VpjWEB+kRj5ZPCDy8YLSpQyjDcKtZXG96p+BP+p+a8aRAQkz3gb/8D/uB0A1KJr/LuLjvSPkrLAqASI3agsP1ZKGZTQ2hMwhzFhGaYOJCx9CioUmwG8w4GN5hwXP2MsRzt30PrSdu3YWKP9Mb5ZwVlpW/m0ePafmoRFvOx2haHo5IIvT2rUp/1jAR+o+QwHsJN9ITVX9LHXXd7sIW9+onFiF9QVVVIMcIPng++CHbnfspA7NnCv+rl//nIIt++t9xub5PE2ZuaXss5eJVMSL+QDhh/hCAZLRaNUYJAKVK/KI=
  - secure: EkAYgpp4tOj6grgtR+EhNbXITxIHeKbersHVqsu4XV414V06s73UBakdxmfiKLRkE2MbveoEabCOp7B7bFkpTvbVvTRQ7bGUxMtGhQ1pomOO1J4ZgdqWA6KfyJCaw70P/DaGSqeUa66Qvm6bSH3621B12WjL2M/nH577Di2/mulg5xz/KkVSLVot8RUiAHfDtnJGtGEwLMkjgHVaRsA2doJWfnXb2kSMDgiuXFGEQtA11viBmmNicHi1d5dBHvG/RuJ6X1kKNTGkNJ7ANt7+p2ANYKuwKryTsGR11VfvNmyMWzHQ61momraiRIi2A7vddVGw8Xd0TnHXxUmldiFiQDjzJ1tROsWR+ONNXTCZ2Sxpd3KixuRTCQA8cmBuoQg8onwicvarqj5duYszPjbHIQPGr1cQF8/TCLEz5bTBZIro6Zr+IzluhMhTdTgyD1fTr8xTfF2KhIboGvthtkIGI1TjOv5TAJbsyqQ8ms/pbx+P9NvE7MAYgxZ5/pN39AbwGgFziYlxRb/KgSDyW4SShmLyzRUnD6ksVOYCOFJzrFBn2i4HPpzrH5zuOj1uGgg7XZaV5L3d4dUA0G3MC3NqEEMvLL8he+xUb+ULbspdUGHM3dFUpH44sk8gqIXeU1Xwg6hZNlvg0X5pYQZIXdsPqgvPezTRRyeRml7wUKW//XI=
